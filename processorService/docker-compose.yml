version: '3.8'

services:
  mongo1:
    image: mongo
    container_name: fsocial_primary
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    command: mongod --replSet rs0 --bind_ip_all --auth
    ports:
      - "27001:27017"
    volumes:
      - fsocial_primary:/data/db
    networks:
      - mongo_replica

  mongo2:
    image: mongo
    container_name: fsocial_secondary_1
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    command: mongod --replSet rs0 --bind_ip_all --auth
    ports:
      - "27002:27017"
    volumes:
      - fsocial_secondary_1:/data/db
    networks:
      - mongo_replica

  mongo3:
    image: mongo
    container_name: fsocial_secondary_2
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    command: mongod --replSet rs0 --bind_ip_all --auth
    ports:
      - "27003:27017"
    volumes:
      - fsocial_secondary_2:/data/db
    networks:
      - mongo_replica

networks:
  mongo_replica:
    driver: bridge

volumes:
  fsocial_primary:
  fsocial_secondary_1:
  fsocial_secondary_2:

#docker exec -it fsocial_primary mongosh
#  rs.initiate({
#_id: "rs0",
#members: [
#  { _id: 0, host: "fsocial_primary:27017" },
#  { _id: 1, host: "fsocial_secondary_1:27017" },
#  { _id: 2, host: "fsocial_secondary_2:27017" }
#]
#})

#  db.createUser({
#user: "root",
#pwd: "root",
#roles: [
#  { role: "root", db: "admin" },
#  { role: "clusterAdmin", db: "admin" },
#  { role: "userAdminAnyDatabase", db: "admin" },
#  { role: "dbAdminAnyDatabase", db: "admin" },
#  { role: "readWriteAnyDatabase", db: "admin" }
#]
#})
