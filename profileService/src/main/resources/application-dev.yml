app:
  services:
    account: ${ACCOUNT_SERVICE_URL:http://localhost:8081}/account
    post: ${POST_SERVICE_URL:http://localhost:8083}/post
spring:
  data:
    redis:
      host: ${REDIS_CONTAINER:localhost}  # Vì Redis chạy trên localhost
      port: ${REDIS_PORT:6379}  # Port từ docker-compose (REDIS_PORT từ .env)
      password: ${REDIS_PASSWORD:redispassword}
      database: 0
      timeout: 2000ms
      connect-timeout: 2000ms
      # Cấu hình connection pool cho Spring Data Redis
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: 500ms
        shutdown-timeout: 200ms
  neo4j:
    uri: ${NEO4J_URL:bolt://localhost:7474}
    authentication:
      username: neo4j
      password: ${NEO4J_PASSWORD:neo4jpassword}
  application:
    name: profileService
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  main:
    allow-circular-references: true

server:
  servlet:
    context-path: /profile
    session:
      timeout: 3m
  port: 8085
logging:
  level:
    org.neo4j.driver: ERROR
    org.springframework.data.redis: DEBUG
    org:
      springframework=DEBUG:
      springframework:
        security: DEBUG
        security.web.access.ExceptionTranslationFilter: DEBUG
        security.access.intercept.AbstractSecurityInterceptor: DEBUG
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE
        engine:
          transaction:
            internal:
              TransactionImpl: DEBUG
        event:
          internal:
            AbstractFlushingEventListener: DEBUG
  # Thời gian chờ kết nối Redis