app:
  services:
    profile: http://localhost:8085/profile
    account: http://localhost:8081/account
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
  version: 1.0.0
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
openapi:
  service:
    api-docs: post-service
    server: http://localhost:8086
    serverName: TimeLine service
    title: Post Service API
    version: 1.0.0
    description: API for managing timeline
#langchain:
#  llm:
#    gemini:
#      api-key: AIzaSyDJnWn9t3zi-8EmLXcfz7NTJTwPQIVyCUk
#      model-name: gemini-pro
#      temperature: 0.7 # Giá trị mặc định, bạn có thể điều chỉnh
#      top-p: 0.95 # Giá trị mặc định, bạn có thể điều chỉnh
#      max-output-tokens: 256 # Giá trị mặc định, bạn có thể điều chỉnh
#      safety-settings: # Cấu hình cài đặt an toàn (tùy chọn)
#        - category: HARM_CATEGORY_HARASSMENT
#          threshold: BLOCK_MEDIUM_AND_ABOVE
#        - category: HARM_CATEGORY_HATE_SPEECH
#          threshold: BLOCK_MEDIUM_AND_ABOVE
#        - category: HARM_CATEGORY_SEXUALLY_EXPLICIT
#          threshold: BLOCK_MEDIUM_AND_ABOVE
#        - category: HARM_CATEGORY_DANGEROUS_CONTENT
#          threshold: BLOCK_MEDIUM_AND_ABOVE
spring:
  application:
    name: timelineService
  data:
    mongodb:
      uri: mongodb://root:root@localhost:27002/primary_database?authSource=admin
      auto-index-creation: true
redis:
  host: replica_redis
  port: 6379
  database: 0
  timeout: 10s
  lettuce:
    pool:
      max-active: 8
      max-idle: 8
      min-idle: 0
      max-wait: 500ms
    shutdown-timeout: 200ms
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  main:
    allow-circular-references: true

server:
  servlet:
    context-path: /timeline
    session:
      timeout: 3m
    register-default-servlet: false
  port: 8086
logging:
  level:
    com.cangngo: DEBUG
    org.springframework.web: DEBUG
    org.springframework.web.cors: TRACE
    org:
      springframework=DEBUG:
      springframework:
        security: DEBUG
        security.web.access.ExceptionTranslationFilter: DEBUG
        security.access.intercept.AbstractSecurityInterceptor: DEBUG
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE
        engine:
          transaction:
            internal:
              TransactionImpl: DEBUG
        event:
          internal:
            AbstractFlushingEventListener: DEBUG
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: full
